name: Ping website every 5 minutes

on:
  schedule:
    - cron: '*/5 * * * *'   # every 5 minutes
  workflow_dispatch:

jobs:
  ping:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Restore status cache
        id: cache
        uses: actions/cache@v3
        with:
          path: .last_status
          key: site-status

      - name: Ping site
        env:
          URL: https://telegramforwarder-5gl5.onrender.com
          TG_BOT_TOKEN: ${{ secrets.TG_BOT_TOKEN }}
          TG_CHAT_ID: ${{ secrets.TG_CHAT_ID }}
        run: |
          echo "Pinging $URL..."
          HTTP_CODE=$(curl -sSL -o /dev/null -w "%{http_code}" --max-time 15 "$URL")
          echo "Status: $HTTP_CODE"

          # Default last status = UP
          LAST_STATUS="UP"
          if [ -f .last_status ]; then
            LAST_STATUS=$(cat .last_status)
          fi

          if [ "$HTTP_CODE" -ge 200 ] && [ "$HTTP_CODE" -lt 400 ]; then
            echo "UP" > .last_status
            if [ "$LAST_STATUS" = "DOWN" ]; then
              MSG="✅ RECOVERY: $URL is BACK UP at $(date)"
              curl -s -X POST "https://api.telegram.org/bot$TG_BOT_TOKEN/sendMessage" \
                -d chat_id="$TG_CHAT_ID" \
                -d text="$MSG"
            fi
            echo "✅ Site is UP"
          else
            echo "DOWN" > .last_status
            if [ "$LAST_STATUS" = "UP" ]; then
              MSG="⚠️ ALERT: $URL is DOWN (status $HTTP_CODE) at $(date)"
              curl -s -X POST "https://api.telegram.org/bot$TG_BOT_TOKEN/sendMessage" \
                -d chat_id="$TG_CHAT_ID" \
                -d text="$MSG"
            fi
            exit 1
          fi

      - name: Save status cache
        uses: actions/cache@v3
        with:
          path: .last_status
          key: site-status
