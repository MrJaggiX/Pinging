name: Ping website every 5 minutes

on:
  schedule:
    - cron: '*/5 * * * *'   # every 5 minutes
  workflow_dispatch:

jobs:
  ping:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Restore status cache
        id: cache-restore
        uses: actions/cache@v3
        with:
          path: .last_status
          key: site-status-${{ github.ref }}

      - name: Ping site with retry
        env:
          URL: https://telegramforwarder-5gl5.onrender.com
          TG_BOT_TOKEN: ${{ secrets.TG_BOT_TOKEN }}
          TG_CHAT_ID: ${{ secrets.TG_CHAT_ID }}
        run: |
          echo "üîç Monitoring: $URL"
          
          # Try with 30 seconds timeout and retry logic
          MAX_RETRIES=2
          TIMEOUT=30
          
          for attempt in $(seq 1 $MAX_RETRIES); do
            echo "Attempt $attempt/$MAX_RETRIES (Timeout: ${TIMEOUT}s)"
            HTTP_CODE=$(curl -sSL -o /dev/null -w "%{http_code}" --max-time $TIMEOUT "$URL")
            
            if [ "$HTTP_CODE" -ge 200 ] && [ "$HTTP_CODE" -lt 400 ]; then
              echo "‚úÖ Success - Status Code: $HTTP_CODE"
              break
            elif [ $attempt -eq $MAX_RETRIES ]; then
              echo "‚ùå All attempts failed"
              HTTP_CODE="000"  # Custom code for timeout
            else
              echo "‚ö†Ô∏è Attempt $attempt failed, retrying in 3 seconds..."
              sleep 3
            fi
          done

          # Read previous status
          LAST_STATUS="UP"
          if [ -f .last_status ]; then
            LAST_STATUS=$(cat .last_status)
            echo "Last status was: $LAST_STATUS"
          fi

          # Handle current status
          if [ "$HTTP_CODE" -ge 200 ] && [ "$HTTP_CODE" -lt 400 ]; then
            echo "UP" > .last_status
            if [ "$LAST_STATUS" = "DOWN" ]; then
              MSG="‚úÖ RECOVERY: $URL is BACK UP (Status: $HTTP_CODE) at $(date)"
              echo "üì¢ Sending Telegram: $MSG"
              curl -s -X POST "https://api.telegram.org/bot$TG_BOT_TOKEN/sendMessage" \
                -d chat_id="$TG_CHAT_ID" \
                -d text="$MSG"
            fi
            echo "üéâ Site is HEALTHY"
          else
            echo "DOWN" > .last_status
            if [ "$LAST_STATUS" = "UP" ]; then
              MSG="‚ö†Ô∏è ALERT: $URL is DOWN (Status: $HTTP_CODE) at $(date)"
              echo "üì¢ Sending Telegram: $MSG"
              curl -s -X POST "https://api.telegram.org/bot$TG_BOT_TOKEN/sendMessage" \
                -d chat_id="$TG_CHAT_ID" \
                -d text="$MSG"
            fi
            echo "üí• Site is DOWN or unreachable"
            exit 1
          fi

      - name: Save status cache
        uses: actions/cache@v3
        with:
          path: .last_status
          key: site-status-${{ github.ref }}
